{"version":3,"sources":["components/MyAvatar/style.module.scss","images/projects sync /^/.*$","images/projects/EnglishForKids.jpg","images/projects/FormRegistrationsNextJs.jpg","images/projects/MovieSearch.jpg","images/projects/Portfolio.jpg","images/projects/Singolo.jpg","images/projects/SocialNetwork.jpg","images/projects/StudioBorovogo.jpg","constants/path.js","images/araik.png","components/MyAvatar/MyAvatar.jsx","components/MyAvatar/index.js","translations/languages/languages.js","translations/messages/messagesEn.js","translations/messages/messagesRu.js","translations/messages/messagesBe.js","translations/i18next.js","store/storeApp.js","components/InformationAboutMe/EssentialInformationAboutMe/EssentialInformationAboutMe.jsx","components/InformationAboutMe/EssentialInformationAboutMe/index.js","components/InformationAboutMe/BriefInformationAboutMe/BriefInformationAboutMe.jsx","components/InformationAboutMe/BriefInformationAboutMe/index.js","pages/Profile/index.js","pages/Profile/Profile.jsx","store/storeFilterProjects.js","components/FilterMenuOfMyProjects/FilterByTechnology/FilterByTechnology.jsx","components/FilterMenuOfMyProjects/FilterByTechnology/index.js","components/FilterMenuOfMyProjects/SortingElements/SortingElements.jsx","components/FilterMenuOfMyProjects/SortingElements/index.js","components/FilterMenuOfMyProjects/FilterMenuOfMyProjects.jsx","components/FilterMenuOfMyProjects/index.js","additionalFunctions/additionalFunctions.js","store/storeModalWindow.js","components/ProjectDescriptionCard/ProjectDescriptionCard.jsx","components/ProjectDescriptionCard/index.js","components/MyModal/MyModal.jsx","components/MyModal/index.js","components/ListOfMyProjects/ListOfMyProjects.jsx","components/ListOfMyProjects/index.js","pages/Projects/index.js","pages/Projects/Projects.jsx","components/App/appWithRoutes.jsx","components/Navigation/Navigation.jsx","components/Navigation/index.js","components/ToggleDarkMode/ToggleDarkMode.jsx","components/ToggleDarkMode/index.js","components/ChangeLanguage/ChangeLanguage.jsx","components/Header/Header.jsx","components/Header/index.js","components/Footer/Footer.jsx","components/Footer/index.js","Theme/Theme.js","components/App/App.jsx","components/App/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","PATH","PROFILE","PROJECTS","ALL","useStyles","makeStyles","theme","objectFit","imageWrapper","image","breakpoints","down","width","height","MyAvatar","classes","Box","mx","className","src","imgAvatar","alt","languages","name","value","messagesEn","header","navigation","profile","projects","date","profilePage","socialMedia","vkontakte","instagram","telegram","briefInformationAboutMe","fullName","years","essentialInformationAboutMe","description","columnDirection","columnDirectionList","Date","getFullYear","keySkills","projectsPage","controlPanel","sort","buttonShowModal","sortingCategories","rating","reset","filter","buttonReset","buttonSelectAll","cardProject","linkDemo","linkCode","moreDetails","messagesRu","projectsRu","messagesBe","i18next","use","LanguageDetector","initReactI18next","init","debug","supportedLngs","interpolation","alwaysFormat","escapeValue","format","_","lng","locale","enUS","ru","be","resources","translation","navBar","language","darkMode","toggleNavbar","flag","changeLanguage","err","console","log","toggleDarkMode","makeObservable","this","observable","action","wrapper","margin","spacing","padding","overflow","tableRow","flexWrap","flexDirection","honest","backgroundColor","props","palette","grey","notHonest","cellTittle","display","justifyContent","alignItems","tittle","fontWeight","textAlign","fontSize","tableContent","listOfKeySkills","marginLeft","listOfKeySkillsItem","border","borderRadius","success","dark","color","marginRight","tittleSkills","marginBottom","listOfKeySkillsItemText","Row","storeApp","row","index","Grid","container","clsx","item","xs","md","lg","Typography","root","Divider","orientation","flexItem","Array","isArray","List","cellListItem","array","Fragment","ListItem","style","length","EssentialInformationAboutMe","observer","t","useTranslation","returnObjects","Paper","elevation","skill","common","white","primary","main","listItem","maxWidth","lineHeight","textContacts","iconContacts","BriefInformationAboutMe","Link","target","href","Profile","sorting","switched","ascending","allProjectsWithTechnologies","from","Set","project","technologiesUsed","reduce","prev","next","showProjectsWithTechnologies","selectSorting","element","String","includes","manageShowProjectsWithTechnologies","split","resetFilterProjectsWithTechnologies","clearFilterProjectsWithTechnologies","iconReset","secondary","showModal","showModalLabel","showModalIcon","menu","paddingBottom","menuInteriorContainer","maxHeight","menuItem","menuItemBefore","option","checkBoxContainer","checkBoxLabel","checkBox","light","FilterByTechnology","React","useState","anchorEl","setAnchorEl","history","useHistory","selectTechnologiesTest","event","newSet","storeFilterProjects","checked","add","delete","addTechnologies","technologies","showProjectsWithTechnologiesUrl","find","push","Button","startIcon","FilterList","variant","onClick","currentTarget","label","Menu","keepMounted","open","Boolean","onClose","paper","list","fullWidth","technology","FormControlLabel","has","control","Checkbox","onChange","minWidth","minHeight","menuIcon","SortingElements","sortByReleaseDate","sortByRating","Sort","TransitionComponent","Fade","MenuItem","FilterMenuOfMyProjects","search","useLocation","query","URLSearchParams","useEffect","get","convertStringToDate","Infinity","day","Number","month","year","toggle","isOpen","setContent","content","cardHeaderContent","whiteSpace","cardHeaderTittle","textOverflow","projectAvatarCompleted","green","projectAvatarUnfinished","red","preview","paddingTop","previewModal","boxShadow","shadows","projectLink","projectLinkIcon","cardModal","overflowY","characteristicsHeaderIcon","descriptionTitleIcon","paddingLeft","characteristicsList","characteristicsItem","contentWrapper","contentWrapperModal","ProjectCard","isModal","Card","CardActionArea","disabled","CardHeader","avatar","Avatar","releaseDate","done","title","subheader","CardMedia","require","screenshots","default","demoLink","link","text","borderColor","Rating","readOnly","join","benefits","advantage","limitations","flaw","ProjectDescriptionCard","storeModalWindow","darkModeBackground","modal","closeButton","closeButtonContainer","closeButtonIcon","closeButtonWrapper","MyModal","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","up","ListOfMyProjects","parameters","previousProject","nextProject","sortProjects","forEach","projectTechnology","toUpperCase","filterProjects","xl","Projects","AppWithRoutes","path","component","render","drawer","flexShrink","toolbar","mixins","drawerPaper","position","wrapperNavigationPanelDesktop","navigationPanelDesktop","myDrawerPaperDesktop","myDrawerPaperMobile","DrawerContent","to","NavLink","button","ListItemIcon","PersonOutline","ListItemText","Whatshot","Navigation","useTheme","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","xsDown","icon","switch","mySwitchBase","transform","switchTrack","ToggleDarkMode","Switch","checkedIcon","switchBase","track","showModalText","textTransform","showModalStartIcon","showModalEndIcon","showMenuLanguage","setShowMenuLanguage","endIcon","appBar","background","toggleNavigation","navigationPanel","flexGrow","logo","Header","CssBaseline","AppBar","Toolbar","IconButton","edge","currentDate","bottom","left","Footer","themeDefault","createTheme","values","sm","themeDarkMode","type","pagesWrapper","App","withTranslation","ThemeProvider","Container","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.836249f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"style_image__2Pp3D\"};","var map = {\n\t\"./EnglishForKids.jpg\": 168,\n\t\"./FormRegistrationsNextJs.jpg\": 169,\n\t\"./MovieSearch.jpg\": 170,\n\t\"./Portfolio.jpg\": 171,\n\t\"./Singolo.jpg\": 172,\n\t\"./SocialNetwork.jpg\": 173,\n\t\"./StudioBorovogo.jpg\": 174\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 167;","export default __webpack_public_path__ + \"static/media/EnglishForKids.977af99c.jpg\";","export default __webpack_public_path__ + \"static/media/FormRegistrationsNextJs.cb3e5d24.jpg\";","export default __webpack_public_path__ + \"static/media/MovieSearch.ecf3b097.jpg\";","export default __webpack_public_path__ + \"static/media/Portfolio.5d6215c8.jpg\";","export default __webpack_public_path__ + \"static/media/Singolo.e892fc38.jpg\";","export default __webpack_public_path__ + \"static/media/SocialNetwork.1a6e3e94.jpg\";","export default __webpack_public_path__ + \"static/media/StudioBorovogo.b233295d.jpg\";","const PATH = {\n    PROFILE: '/profile',\n    PROJECTS: '/projects',\n    ALL: '*',\n};\n\nexport default PATH;","export default __webpack_public_path__ + \"static/media/araik.c50d7dd4.png\";","import React from \"react\";\nimport {Box, Link, List, ListItem, Paper, Typography} from \"@material-ui/core\";\nimport style from \"./style.module.scss\";\nimport {FaInstagram, FaTelegramPlane, FaVk} from \"react-icons/fa\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport {useTranslation} from \"react-i18next\";\nimport imgAvatar from \"../../images/araik.png\";\n\nconst useStyles = makeStyles(theme => ({\n    objectFit: \"cover\",\n    imageWrapper: {\n    },\n    image: {\n        objectFit: \"contain\",\n        [theme.breakpoints.down('lg')]: {\n            width: 150,\n            height: 300,\n        },\n        [theme.breakpoints.down('md')]: {\n            width: 150,\n            height: 250,\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: 128,\n            height: 290,\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: 100,\n            height: 190,\n        },\n    }\n}))\n\nconst MyAvatar = () => {\n    const classes = useStyles()\n\n    return <>\n        <Box mx=\"auto\">\n            <img className={classes.image}\n                 width=\"240\"\n                 height=\"500\"\n                 src={imgAvatar}\n                 alt=\"avatar\"/>\n        </Box>\n\n    </>\n}\n\nexport default MyAvatar;","import MyAvatar from \"./MyAvatar\";\r\nexport default MyAvatar;","const languages = {\n    \"be-BE\": {\n        name: \"Беларускi\",\n        value: \"be-BE\",\n    },\n    \"en-EN\": {\n        name: \"English\",\n        value: \"en-EN\",\n    },\n    \"ru-RU\": {\n        name: \"Русский\",\n        value: \"ru-RU\",\n    },\n}\n\nexport default languages;","import projectsEn from \"./projects/projectsEn.json\";\n\nconst messagesEn = {\n    header: \"Portfolio\",\n    navigation: {\n        profile: \"Profile\",\n        projects: \"Projects\"\n    },\n    date: '{{date}}',\n    projects: projectsEn,\n    profilePage: {\n        socialMedia: {\n            vkontakte: \"vkontakte\",\n            instagram: \"instagram\",\n            telegram: \"telegram\",\n        },\n        briefInformationAboutMe: {\n            fullName: \"Rasoyan Arayik Jasmovich\",\n            years: \"28 years old\",\n        },\n        essentialInformationAboutMe: [\n            {\n                header: \"Gender:\",\n                description: \"male\",\n            },\n            {\n                header: \"Date of birth:\",\n                description: \"03.21.1993\",\n            },\n            {\n                header: \"Phone:\",\n                description: \"+375 25 664 60 70\",\n            },\n            {\n                header: \"Address of residence\",\n                description: \"Bobruisk, Uritskogo street 7\",\n            },\n            {\n                header: \"Smoking habits:\",\n                description: \"neutral (do not smoke)\",\n            },\n            {\n                header: \"Ready to get started:\",\n                description: \"ready right away, preferably starting with the remote version, but I will consider all the options\",\n            },\n            {\n                header: \"Desired salary level:\",\n                description: \"I am ready to work for free the first time\",\n            },\n            {\n                header: \"I speak these languages:\",\n                columnDirection: false,\n                description: [\"Russian\"],\n            },\n            {\n                header: \"Citizenship:\",\n                description: \"Belarus\",\n            },\n            {\n                header: \"Work permit:\",\n                description: \"Belarus\",\n            },\n            {\n                header: \"Desired travel time to work:\",\n                description: \"currently looking for a remote job\",\n            },\n            {\n                header: \"Education:\",\n                columnDirectionList: true,\n                description: [\n                    'BSUFK (in absentia) - specialty \"Management in Tourism\" from 2011 to 2016',\n                    `BNTU (in absentia) - specialty -\" Information technology software \"from 2018 to 2023`,\n                    'Rolling-scopes-school - \"Frontend developer\" from 01.02.2019 to 01.08.2019',\n                ],\n            },\n            {\n                header: \"Work experience:\",\n                columnDirectionList: true,\n                description: [\n                    \"I worked in a team on commercial projects for 2 months\",\n                    `system administrator at the institute from 2019 to ${new Date().getFullYear()}`,\n                ],\n            },\n            {\n                header: \"About me:\",\n                description: \"Programming day and night,\" +\n                    \"I love sports and enjoy the results of my work\"\n            },\n        ],\n        keySkills: {\n            header: \"Libraries and frameworks:\",\n            description: [\"Material ui\", \"Bootstrap\", \"Redux\",\n                \"Mobx\", \"Clsx\", \"Classes\",\n                \"React-hook-form\", \"Yup\", \"Jquery\",\n                \"i18next\", \"TypeScript\"],\n        },\n    },\n    projectsPage: {\n        controlPanel: {\n            sort: {\n                buttonShowModal: \"Sort\",\n                sortingCategories: {\n                    date: \"Date\",\n                    rating: \"Rating\",\n                    reset: \"Disable sorting\"\n                },\n            },\n            filter: {\n                buttonShowModal: \"Filter\",\n                buttonReset: \"Reset All\",\n                buttonSelectAll: \"Select All\",\n            },\n        },\n        cardProject: {\n            linkDemo: \"Demo\",\n            linkCode: \"Code\",\n            moreDetails: \"more details\",\n        },\n    }\n}\n\nexport default messagesEn;","import projectsRu from \"./projects/projectsRu.json\";\n\nconst messagesRu = {\n    header: \"Портфолио\",\n    navigation: {\n        profile: \"Профайл\",\n        projects: \"Проекты\"\n    },\n    date: '{{date}}',\n    projects: projectsRu,\n    profilePage: {\n        socialMedia: {\n            vkontakte: \"вконтакте\",\n            instagram: \"instagram\",\n            telegram: \"telegram\",\n        },\n        briefInformationAboutMe: {\n            fullName: \"Расоян Араик Джасмович\",\n            years: \"28 лет\",\n        },\n        essentialInformationAboutMe: [\n            {\n                header: \"Пол:\",\n                description: \"мужской\",\n            },\n            {\n                header: \"Дата рождения:\",\n                description: \"21.03.1993\",\n            },\n            {\n                header: \"Телефон:\",\n                description: \"+375 25 664 60 70\",\n            },\n            {\n                header: \"Адрес проживания\",\n                description: \"г Бобруйск, ул Урицкого 7\",\n            },\n            {\n                header: \"Отношение к курению:\",\n                description: \"нейтральное (не курю)\",\n            },\n            {\n                header: \"Готов приступить к работе:\",\n                description: \"сразу готов, желательно начать с удалённого варианта, но рассмотрю все варианты\",\n            },\n            {\n                header: \"Желаемый уровень з.п.:\",\n                description: \"готов работать первое время бесплатно\",\n            },\n            {\n                header: \"Владею следующими языками:\",\n                columnDirection: false,\n                description: [\"Русский\"],\n            },\n            {\n                header: \"Гражданство:\",\n                description: \"Беларусь\",\n            },\n            {\n                header: \"Разрешение на работу:\",\n                description: \"Беларусь\",\n            },\n            {\n                header: \"Желательное время пути до работы:\",\n                description: \"на текущий момент ищу удалённую работу\",\n            },\n            {\n                header: \"Образование:\",\n                columnDirectionList: true,\n                description: [\n                    'БГУФК (заочно) - специальность \"Менеджмент в туризме\" c 2011 по 2016',\n                    `БНТУ (заочно) - специальность - \"Программное обеспечение информационных технологий\" c 2018 по 2023`,\n                    'Rolling-scopes-school - \"Frontend разработчик\" с 01.02.2019 по 01.08.2019',\n                ],\n            },\n            {\n                header: \"Опыт работы:\",\n                columnDirectionList: true,\n                description: [\n                    \"2 месяца работал в комманде над коммерческими проектами\",\n                    `системный администратор в институте с 2019 по ${new Date().getFullYear()}`,\n                ],\n            },\n            {\n                header: \"Обо мне:\",\n                description: \"программирую день и ночь, \" +\n                    \"люблю спорт и получаю кайф от результатов своей работы\"\n            },\n        ],\n        keySkills: {\n            header: \"Библиотеки и фреймворки:\",\n            description: [\"Material ui\", \"Bootstrap\", \"Redux\",\n                \"Mobx\", \"Clsx\", \"Classes\",\n                \"React-hook-form\", \"Yup\", \"Jquery\",\n                \"i18next\", \"TypeScript\", \"next.js\"],\n        },\n    },\n    projectsPage: {\n        controlPanel: {\n            sort: {\n                buttonShowModal: \"Сортировка\",\n                sortingCategories: {\n                    date: \"Дата\",\n                    rating: \"Рейтинг\",\n                    reset: \"Выключить сортировку\"\n                },\n            },\n            filter: {\n                buttonShowModal: \"Фильтр\",\n                buttonReset: \"Сбросить всё\",\n                buttonSelectAll: \"Выбрать всё\",\n            },\n        },\n        cardProject: {\n            linkDemo: \"Демо\",\n            linkCode: \"Код\",\n            moreDetails: \"подробнее\",\n        },\n    }\n}\n\nexport default messagesRu;","import projectsBe from \"./projects/projectsBe.json\";\n\nconst messagesBe = {\n    header: \"Партфоліа\",\n    navigation: {\n        profile: \"Прафайл\",\n        projects: \"Праекты\"\n    },\n    date: '{{date}}',\n    projects: projectsBe,\n    profilePage: {\n        socialMedia: {\n            vkontakte: \"вконтакте\",\n            instagram: \"instagram\",\n            telegram: \"telegram\",\n        },\n        briefInformationAboutMe: {\n            fullName: \"Расаян Араик Джасмавiч\",\n            years: \"28 гадоў\",\n        },\n        essentialInformationAboutMe: [\n            {\n                header: \"Пол:\",\n                description: \"мужчынскі\",\n            },\n            {\n                header: \"Дата нараджэння:\",\n                description: \"21.03.1993\",\n            },\n            {\n                header: \"Тэлефон:\",\n                description: \"+375 25 664 60 70\",\n            },\n            {\n                header: \"Адрас пражывання\",\n                description: \"г Бабруйск, вул Урыцкага 7\",\n            },\n            {\n                header: \"Стаўленне да палення:\",\n                description: \"нейтральнае (не палю)\",\n            },\n            {\n                header: \"Ці гатовы прыступіць да працы:\",\n                description: \"адразу гатовы, пажадана пачаць з выдаленага варыянту, але разгледжу усе варыянты\",\n            },\n            {\n                header: \"Жаданы ўзровень з.п .:\",\n                description: \"Ці гатовы працаваць першы час бясплатна\",\n            },\n            {\n                header: \"Валодаю наступнымі мовамі:\",\n                columnDirection: false,\n                description: [ \"Рускі\"],\n            },\n            {\n                header: \"Грамадзянства:\",\n                description: \"Беларусь\",\n            },\n            {\n                header: \"Дазвол на працу:\",\n                description: \"Беларусь\",\n            },\n            {\n                header: \"Пажадана час шляху да працы:\",\n                description: \"на бягучы момант шукаю адна сцёртая працу\",\n            },\n            {\n                header: \"Адукацыя:\",\n                columnDirectionList: true,\n                description: [\n                    'БДУФК (завочна) - спецыяльнасць \"Менеджмент ў турызме\" c 2011 г. па 2016',\n                    `БНТУ (завочна) - спецыяльнасць -\" Праграмнае забеспячэнне інфармацыйных тэхналогій \"c 2018 па 2023`,\n                    'Rolling-scopes-school - \"Frontend распрацоўшчык\" з 2019/02/01 па 2019/08/01',\n                ],\n            },\n            {\n                header: \"Вопыт працы:\",\n                columnDirectionList: true,\n                description: [\n                    \"2 месяцы працаваў у Коммандо над камерцыйнымі праектамі\",\n                    `Сістэмны адміністратар у інстытуце з 2019 па $ {new Date (). GetFullYear ()}`,\n                ],\n            },\n            {\n                header: \"Пра мяне:\",\n                description: \"праграмуюць дзень і ноч,\" +\n                    \"Люблю спорт і атрымліваю кайф ад вынікаў сваёй працы\"\n            },\n        ],\n        keySkills: {\n            header: \"Бібліятэкі і фреймворка:\",\n            description: [\"Material ui\", \"Bootstrap\", \"Redux\",\n                \"Mobx\", \"Clsx\", \"Classes\",\n                \"React-hook-form\", \"Yup\", \"Jquery\",\n                \"I18next\", \"TypeScript\"],\n        },\n    },\n    projectsPage: {\n        controlPanel: {\n            sort: {\n                buttonShowModal: \"Сартаванне\",\n                sortingCategories: {\n                    date: \"Дата\",\n                    rating: \"Рэйтынг\",\n                    reset: \"Выключыць сартыроўку\"\n                },\n            },\n            filter: {\n                buttonShowModal: \"Фільтр\",\n                buttonReset: \"Скінуць ўсё\",\n                buttonSelectAll: \"Выбраць усё\",\n            },\n        },\n        cardProject: {\n            linkDemo: \"Дэма\",\n            linkCode: \"Код\",\n            moreDetails: \"падрабязней\",\n        },\n    }\n}\n\nexport default messagesBe;","import languages from \"./languages/languages\";\nimport i18next from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport messagesEn from \"./messages/messagesEn.js\";\nimport messagesRu from \"./messages/messagesRu.js\";\nimport {format} from 'date-fns'\nimport {ru, enUS, be} from 'date-fns/locale'\nimport messagesBe from \"./messages/messagesBe\";\n\ni18next.use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        debug: false,\n        supportedLngs: Object.keys(languages),\n        interpolation: {\n            alwaysFormat: true,\n            escapeValue: false,\n            format: function (value, _, lng) {\n                if (value instanceof Date) {\n                    switch (lng) {\n                        case languages[\"en-EN\"].value:\n                            return format(value, 'dd MMMM yyyy', {locale: enUS});\n                        case languages[\"ru-RU\"].value:\n                            return format(value, 'dd MMMM yyyy', {locale: ru});\n                        case languages[\"be-BE\"].value:\n                            return format(value, 'dd MMMM yyyy', {locale: be});\n                        default:\n                            return format(value, 'dd MMMM yyyy', {locale: be});\n                    }\n                }\n                return value;\n            }\n        },\n        resources: {\n            [languages[\"en-EN\"].value]: {\n                translation: {\n                    ...messagesEn,\n                },\n            },\n            [languages[\"ru-RU\"].value]: {\n                translation: {\n                    ...messagesRu,\n                },\n            },\n            [languages[\"be-BE\"].value]: {\n                translation: {\n                    ...messagesBe,\n                },\n            },\n        }\n    });\n\n\nexport default i18next;","import React from \"react\"\nimport {action, makeAutoObservable, makeObservable, observable} from \"mobx\"\nimport i18next from \"../translations/i18next\";\n\nclass storeApp {\n    navBar = false\n    language = i18next.language\n    darkMode = false\n\n    constructor() {\n        makeObservable(this, {\n            navBar: observable,\n            language: observable,\n            darkMode: observable,\n            toggleNavbar: action,\n            changeLanguage: action,\n            toggleDarkMode: action,\n        })\n    }\n\n    toggleNavbar = (flag) => {\n        if (typeof flag !== \"undefined\") {\n            this.navBar = flag;\n        }\n        else {\n            this.navBar = !this.navBar;\n        }\n    }\n\n    changeLanguage = (language) => {\n        i18next.changeLanguage(language.value, (err) => {\n            if (err) return console.log(\"Ошибка, язык не переведён!\");\n            this.language = language;\n        });\n    }\n\n    toggleDarkMode = () => {\n        this.darkMode = !this.darkMode\n        console.log(this.darkMode)\n    }\n}\n\nexport default new storeApp();","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Grid, List, ListItem, ListSubheader, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport clsx from \"clsx\";\nimport {observer} from \"mobx-react\";\nimport storeApp from \"../../../store/storeApp\";\n\nconst useStyles = makeStyles(theme => ({\n    wrapper: {\n        margin: theme.spacing(2, 0),\n        padding: theme.spacing(2),\n        overflow: \"hidden\",\n    },\n    tableRow: {\n        width: \"100%\",\n        flexWrap: \"nowrap\",\n        padding: \"15px 0\",\n        margin: 0,\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: \"column\",\n        }\n    },\n    honest: {\n        backgroundColor: props => props.darkMode ? theme.palette.grey[800] : theme.palette.grey[50],\n    },\n    notHonest: {\n        backgroundColor: props => props.darkMode ? theme.palette.grey[900] : theme.palette.grey[200],\n    },\n    cellTittle: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    tittle: {\n        padding: \"10px 0\",\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 20,\n        [theme.breakpoints.down('lg')]: {\n            fontSize: 18,\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: 16,\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 14,\n        },\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 16,\n        },\n    },\n    tableContent: {\n        fontSize: 20,\n        [theme.breakpoints.down('lg')]: {\n            fontSize: 18,\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: 16,\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 14,\n        },\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 16,\n        },\n    },\n    listOfKeySkills: {\n        width: \"100%\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        padding: 0,\n        marginLeft: 0,\n    },\n    listOfKeySkillsItem: {\n        width: \"min-content\",\n        border: 0,\n        borderRadius: 5,\n        padding: 4,\n        margin: theme.spacing(1, 0),\n        backgroundColor: theme.palette.success.dark,\n        color: \"white\",\n        marginRight: theme.spacing(1),\n    },\n    tittleSkills: {\n        marginBottom: theme.spacing(1),\n        padding: 0,\n    },\n    listOfKeySkillsItemText: {\n        width: \"max-content\",\n        fontSize: 20,\n        [theme.breakpoints.down('lg')]: {\n            fontSize: 18,\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: 16,\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 14,\n        },\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 16,\n        },\n    },\n}))\n\nconst Row = (props) => {\n    const classes = useStyles({darkMode: storeApp.darkMode})\n    const {row, index} = props\n\n    return <Grid container\n                 spacing={2}\n                 className={clsx(classes.tableRow, {[classes.honest]: (index % 2 == 0)}, {[classes.notHonest]: (index % 2 !== 0)})}\n    >\n        <Grid item xs={12} md={4} lg={3} className={classes.cellTittle}>\n            <Typography classes={{root: classes.tittle}}>\n                {row.header}\n            </Typography>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem/>\n        <Grid item\n              xs={12}\n              md={8}\n              lg={9}\n        >\n            {\n                !Array.isArray(row.description) ?\n                    <Typography className={classes.tableContent}>\n                        {row.description}\n                    </Typography> :\n                    <List>\n                        {\n                            row.description.map((cellListItem, index, array) => {\n                                return <React.Fragment key={`listItem-${index}`}>\n                                    <ListItem style={{padding: 0}}>\n                                        <Typography className={classes.tableContent}>\n                                            {cellListItem}\n                                            {array.length > 1 && ((index === array.length - 1) ? \".\" : row.columnDirectionList ? \";\" : \",\")}\n                                        </Typography>\n                                    </ListItem>\n                                </React.Fragment>\n                            })\n                        }\n                    </List>\n            }\n        </Grid>\n    </Grid>\n}\n\nconst EssentialInformationAboutMe = () => {\n    const classes = useStyles({darkMode: storeApp.darkMode});\n    const {t} = useTranslation();\n    let essentialInformationAboutMe = t('profilePage.essentialInformationAboutMe', {returnObjects: true});\n    let keySkills = t('profilePage.keySkills', {returnObjects: true})\n\n    return <>\n        <Paper elevation={3}\n               classes={{root: classes.wrapper}}>\n            {\n                essentialInformationAboutMe.map((row, index) => {\n                    return <React.Fragment key={`gridItem-${index}`}>\n                        <Row row={row} index={index}/>\n                    </React.Fragment>\n                })\n            }\n        </Paper>\n        <Paper className={classes.wrapper}\n               elevation={3}>\n            <Typography classes={{root: clsx(classes.tittle, classes.tittleSkills)}}>\n                {keySkills.header}\n            </Typography>\n            <List aria-labelledby=\"nested-list-subheader\"\n                  classes={{root: classes.listOfKeySkills}}>\n                {\n                    keySkills.description.sort().map((skill, index) => {\n                        return <React.Fragment key={`skillsItem-${index}`}>\n                            <ListItem className={classes.listOfKeySkillsItem}>\n                                <Typography className={classes.listOfKeySkillsItemText}>\n                                    {skill}\n                                </Typography>\n                            </ListItem>\n                        </React.Fragment>\n                    })\n                }\n            </List>\n        </Paper>\n    </>\n}\n\nexport default observer(EssentialInformationAboutMe)","import EssentialInformationAboutMe from \"./EssentialInformationAboutMe\";\r\nexport default EssentialInformationAboutMe;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Box, Link, List, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport {FaInstagram, FaMailBulk, FaTelegramPlane, FaVk} from \"react-icons/fa\";\nimport clsx from \"clsx\";\nimport storeApp from \"../../../store/storeApp\";\n\nconst useStyles = makeStyles(theme => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main,\n    },\n    listItem: {\n        [theme.breakpoints.down('lg')]: {\n            padding: 4,\n        },\n    },\n    fullName: {\n        maxWidth: 390,\n        lineHeight: \"1.2\",\n        fontSize: 50,\n        fontWeight: \"bold\",\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: 300,\n            fontSize: 30,\n            lineHeight: \"1.1\",\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: 30,\n            lineHeight: \"1.1\",\n        },\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: 200,\n            fontSize: 20,\n            lineHeight: \"1\",\n        },\n        [theme.breakpoints.down('xs')]: {\n            maxWidth: 160,\n        },\n    },\n    years: {\n        fontSize: 50,\n        [theme.breakpoints.down('lg')]: {\n            fontSize: 30,\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: 30,\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 20,\n        },\n    },\n    textContacts: {\n        fontSize: 40,\n        [theme.breakpoints.down('lg')]: {\n            fontSize: 20,\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: 16,\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 15,\n        },\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    iconContacts: {\n        fontSize: 40,\n        marginRight: 15,\n        color: theme.palette.primary.main,\n        [theme.breakpoints.down('lg')]: {\n            fontSize: 25,\n        },\n        [theme.breakpoints.down('md')]: {},\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 20,\n            marginRight: 8,\n        },\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 16,\n        },\n    },\n}));\n\nconst BriefInformationAboutMe = () => {\n    const classes = useStyles({darkMode: storeApp.darkMode})\n    const {t} = useTranslation()\n\n    return <Box mx={\"auto\"}>\n        <List>\n            <ListItem className={clsx(classes.listItem, classes.fullName)}>\n                {t('profilePage.briefInformationAboutMe.fullName')}\n            </ListItem>\n            <ListItem className={clsx(classes.listItem, classes.years)}>\n                {t('profilePage.briefInformationAboutMe.years')}\n            </ListItem>\n            <ListItem className={classes.listItem}>\n                <FaMailBulk className={clsx(classes.iconContacts, classes.darkMode)} />\n                <Typography classes={{root: classes.textContacts}}>\n                    araikrasoian@gmail.com\n                </Typography>\n            </ListItem>\n            <ListItem className={classes.listItem}>\n                <Link target=\"_blank\"\n                      href=\"https://vk.com/araiikk\">\n                    <FaVk className={clsx(classes.iconContacts, classes.darkMode)} />\n                </Link>\n                <Link target=\"_blank\"\n                      href=\"https://www.instagram.com/araiikk\">\n                    <FaInstagram className={clsx(classes.iconContacts, classes.darkMode)} />\n                </Link>\n                <Link href=\"tel:+375256643070\">\n                    <FaTelegramPlane className={clsx(classes.iconContacts, classes.darkMode)} />\n                </Link>\n            </ListItem>\n        </List>\n    </Box>\n}\n\nexport default BriefInformationAboutMe","import BriefInformationAboutMe from \"./BriefInformationAboutMe\";\r\nexport default BriefInformationAboutMe;","import Profile from \"./Profile\";\nexport default Profile;","import React from \"react\";\nimport MyAvatar from \"../../components/MyAvatar\";\nimport EssentialInformationAboutMe from \"../../components/InformationAboutMe/EssentialInformationAboutMe\";\nimport BriefInformationAboutMe from \"../../components/InformationAboutMe/BriefInformationAboutMe\";\nimport style from \"./style.module.scss\";\nimport {Box, makeStyles} from \"@material-ui/core\";\n\n\nconst Profile = () => {\n\n    return <>\n        <Box display={\"flex\"} alignItems=\"center\" justifyContent=\"center\">\n            <BriefInformationAboutMe />\n            <MyAvatar />\n        </Box>\n        <Box>\n            <EssentialInformationAboutMe/>\n        </Box>\n    </>;\n}\n\nexport default Profile;","import React from \"react\"\r\nimport {action, makeObservable, observable} from \"mobx\"\r\nimport projects from \"../translations/messages/projects/projectsRu.json\"\r\n\r\nclass storeFilterProjects {\r\n    sorting = [\r\n        {\r\n            name: \"sortByReleaseDate\",\r\n            switched: false,\r\n            ascending: false,\r\n        },\r\n        {\r\n            name: \"sortByRating\",\r\n            switched: false,\r\n            ascending: false,\r\n        },\r\n    ]\r\n\r\n    allProjectsWithTechnologies = Array.from(new Set(projects.map(project => project.technologiesUsed).reduce((prev, next) => {\r\n      return [...prev, ...next]\r\n    }, [])))\r\n\r\n    showProjectsWithTechnologies = this.allProjectsWithTechnologies\r\n\r\n    selectSorting = (name, ascending) => {\r\n        this.sorting = this.sorting.map(element => {\r\n            if (element.name === name) {\r\n                return {\r\n                    name: name,\r\n                    switched: String(ascending).includes(\"true\") || String(ascending).includes(\"false\"),\r\n                    ascending: String(ascending).includes(\"true\"),\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...element,\r\n                switched: false,\r\n                ascending: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    manageShowProjectsWithTechnologies = (showProjectsWithTechnologies) => {\r\n        if (typeof showProjectsWithTechnologies === \"string\") {\r\n            this.showProjectsWithTechnologies = showProjectsWithTechnologies.split(\",\")\r\n        } else {\r\n            this.showProjectsWithTechnologies = showProjectsWithTechnologies || []\r\n        }\r\n    }\r\n\r\n    resetFilterProjectsWithTechnologies = () => {\r\n        this.showProjectsWithTechnologies = this.allProjectsWithTechnologies\r\n    }\r\n\r\n    clearFilterProjectsWithTechnologies = () => {\r\n        this.showProjectsWithTechnologies.length = 0\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            allProjectsWithTechnologies: observable,\r\n            sorting: observable,\r\n            showProjectsWithTechnologies: observable,\r\n            selectSorting: action,\r\n            manageShowProjectsWithTechnologies: action,\r\n            resetFilterProjectsWithTechnologies: action,\r\n            clearFilterProjectsWithTechnologies: action,\r\n        })\r\n    }\r\n}\r\n\r\nexport default new storeFilterProjects();","import React from \"react\";\nimport {\n    Button,\n    Checkbox,\n    FormControlLabel,\n    ListItem,\n    Menu,\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport storeFilterProjects from \"../../../store/storeFilterProjects\";\nimport {observer} from \"mobx-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {FilterList} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport {BiReset, BsCheckAll} from \"react-icons/all\";\nimport {useTranslation} from \"react-i18next\";\nimport storeApp from \"../../../store/storeApp\";\n\nconst useStyles = makeStyles((theme) => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main\n    },\n    iconReset: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.secondary.main\n    },\n    showModal: {\n        justifyContent: \"left\",\n        padding: \"4px 2px\",\n        display: \"flex\",\n    },\n    showModalLabel: {\n        marginLeft: \"auto\",\n        marginRight: \"14px\",\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    showModalIcon: {\n        margin: theme.spacing(0, 1),\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    menu: {\n        paddingBottom: 8,\n    },\n    menuInteriorContainer: {\n        maxWidth: 360,\n        maxHeight: 450,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        [theme.breakpoints.down('md')]: {\n            maxWidth: 250,\n            display: \"block\",\n        },\n        [theme.breakpoints.down('xs')]: {\n            maxWidth: 200,\n            maxHeight: 350,\n        },\n    },\n    menuItem: {\n        width: \"50%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        },\n    },\n    menuItemBefore: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        [theme.breakpoints.down('md')]: {\n            display: \"block\",\n        },\n    },\n    option: {\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    checkBoxContainer: {\n        width: \"100%\",\n        margin: 0,\n    },\n    checkBoxLabel: {\n        width: \"100%\",\n        margin: 0,\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    checkBox: {\n        color: theme.palette.success.light,\n        '&$checked': {\n            color: theme.palette.success.dark,\n        },\n    },\n}))\n\nconst FilterByTechnology = () => {\n    const {t} = useTranslation()\n    const classes = useStyles({darkMode: storeApp.darkMode});\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const history = useHistory()\n    const selectTechnologiesTest = (event) => {\n        const newSet = new Set(storeFilterProjects.showProjectsWithTechnologies)\n\n        if (event.target.checked) {\n            newSet.add(event.target.name)\n        } else {\n            newSet.delete(event.target.name)\n        }\n\n        addTechnologies(Array.from(newSet))\n    }\n    const addTechnologies = (technologies) => {\n        storeFilterProjects.manageShowProjectsWithTechnologies(technologies)\n        const showProjectsWithTechnologiesUrl = storeFilterProjects.showProjectsWithTechnologies.length > 0 &&\n        storeFilterProjects.showProjectsWithTechnologies.length !== storeFilterProjects.allProjectsWithTechnologies.length ?\n            `&showProjectsWithTechnologies=${storeFilterProjects.showProjectsWithTechnologies}` : \"\"\n\n        const sorting = storeFilterProjects.sorting.find(project => project.switched)\n\n        if (sorting) {\n            history.push(`?${sorting.name}=${sorting.ascending}${showProjectsWithTechnologiesUrl}`)\n        } else {\n            history.push(`?${showProjectsWithTechnologiesUrl}`)\n        }\n    }\n\n    return <>\n        <Button startIcon={<FilterList/>}\n                variant=\"outlined\"\n                onClick={(event) => setAnchorEl(event.currentTarget)}\n                classes={{\n                    root: classes.showModal,\n                    label: clsx(classes.showModalLabel, classes.darkMode),\n                    startIcon: clsx(classes.showModalIcon, classes.darkMode),\n                }}\n        >\n            {t('projectsPage.controlPanel.filter.buttonShowModal')}\n        </Button>\n        <Menu id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n              classes={{\n                  paper: classes.menu,\n                  list: classes.menuInteriorContainer\n              }}\n        >\n            <ListItem className={clsx(classes.menuItem, classes.menuItemBefore)}>\n                <Button fullWidth\n                        startIcon={<BiReset/>}\n                        onClick={() => addTechnologies([])}\n                        classes={{\n                            root: classes.option,\n                            startIcon: classes.iconReset,\n                            label: classes.iconReset,\n                        }}\n                >\n                    {t('projectsPage.controlPanel.filter.buttonReset')}\n                </Button>\n                <Button fullWidth\n                        startIcon={<BsCheckAll/>}\n                        onClick={() => addTechnologies(storeFilterProjects.allProjectsWithTechnologies)}\n                        classes={{\n                            root: classes.option,\n                            startIcon: classes.darkMode,\n                            label: classes.darkMode,\n                        }}\n                >\n                    {t('projectsPage.controlPanel.filter.buttonSelectAll')}\n                </Button>\n            </ListItem>\n            {storeFilterProjects.allProjectsWithTechnologies.map((technology, index) => {\n                return <React.Fragment key={`technologyFilterCheckbox-${index}`}>\n                    <ListItem className={classes.menuItem}>\n                        <FormControlLabel\n                            classes={{\n                                root: classes.checkBoxContainer,\n                                label: classes.checkBoxLabel\n                            }}\n                            checked={(new Set(storeFilterProjects.showProjectsWithTechnologies)).has(technology)}\n                            control={<Checkbox color=\"default\"\n                                               classes={{root: classes.checkBox}}\n                                               onChange={selectTechnologiesTest}\n                                               name={technology}/>}\n                            label={technology}\n                        />\n                    </ListItem>\n                </React.Fragment>\n            })}\n        </Menu>\n    </>\n}\n\nexport default observer(FilterByTechnology)","import FilterByTechnology from \"./FilterByTechnology\"\r\nexport default FilterByTechnology","import React from \"react\"\nimport {Button} from \"@material-ui/core\";\nimport storeFilterProjects from \"../../../store/storeFilterProjects\";\nimport {useHistory} from \"react-router-dom\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {Sort} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {useTranslation} from \"react-i18next\";\nimport clsx from \"clsx\";\nimport storeApp from \"../../../store/storeApp\";\n\nconst useStyles = makeStyles(theme => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main\n    },\n    showModal: {\n        minWidth: 100,\n        justifyContent: \"left\",\n        padding: \"6px 2px 4px 2px\",\n    },\n    showModalLabel: {\n        marginLeft: \"auto\",\n        marginRight: \"14px\",\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    showModalIcon: {\n        margin: theme.spacing(0, 1),\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n        },\n    },\n    menuItem: {\n        fontSize: 16,\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 12,\n            minHeight: \"unset\",\n        },\n    },\n    menuIcon: {\n        margin: theme.spacing(0, 1),\n    },\n}))\n\nconst SortingElements = () => {\n    const {t} = useTranslation()\n    const classes = useStyles({darkMode: storeApp.darkMode})\n    const history = useHistory()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const open = Boolean(anchorEl);\n    const selectSorting = (sortByReleaseDate, sortByRating) => {\n        const showProjectsWithTechnologiesUrl = storeFilterProjects.showProjectsWithTechnologies.length > 0 &&\n        storeFilterProjects.showProjectsWithTechnologies.length !== storeFilterProjects.allProjectsWithTechnologies.length ?\n            `&showProjectsWithTechnologies=${storeFilterProjects.showProjectsWithTechnologies}` : \"\"\n        if (sortByReleaseDate) {\n            history.push(`?sortByReleaseDate=${sortByReleaseDate}${showProjectsWithTechnologiesUrl}`)\n            storeFilterProjects.selectSorting(\"sortByReleaseDate\", sortByReleaseDate)\n        } else if (sortByRating) {\n            history.push(`?sortByRating=${sortByRating}${showProjectsWithTechnologiesUrl}`)\n            storeFilterProjects.selectSorting(\"sortByRating\", sortByRating)\n        } else {\n            history.push(`?${showProjectsWithTechnologiesUrl}`)\n            storeFilterProjects.selectSorting(null, null)\n        }\n        setAnchorEl(null)\n    }\n\n    return <>\n        <Button startIcon={<Sort />}\n                aria-controls=\"fade-menu\"\n                aria-haspopup=\"true\"\n                variant=\"outlined\"\n                onClick={(event) => setAnchorEl(event.currentTarget)}\n                classes={{\n                    root: classes.showModal,\n                    label: clsx(classes.showModalLabel, classes.darkMode),\n                    startIcon: clsx(classes.showModalIcon, classes.darkMode),\n                }}\n        >\n            {t('projectsPage.controlPanel.sort.buttonShowModal')}\n        </Button>\n        <Menu\n            id=\"fade-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={() => setAnchorEl(null)}\n            TransitionComponent={Fade}\n        >\n            <MenuItem className={classes.menuItem}\n                      onClick={() => selectSorting(\"true\", null)}>\n                <ExpandLessIcon className={clsx(classes.menuIcon, classes.darkMode)}/>\n                {t('projectsPage.controlPanel.sort.sortingCategories.date')}\n            </MenuItem>\n            <Divider/>\n            <MenuItem className={classes.menuItem}\n                      onClick={() => selectSorting(\"false\", null)}>\n                <ExpandMoreIcon className={clsx(classes.menuIcon, classes.darkMode)}/>\n                {t('projectsPage.controlPanel.sort.sortingCategories.date')}\n            </MenuItem>\n            <Divider/>\n            <MenuItem className={classes.menuItem}\n                      onClick={() => selectSorting(null, \"true\")}>\n                <ExpandLessIcon className={clsx(classes.menuIcon, classes.darkMode)}/>\n                {t('projectsPage.controlPanel.sort.sortingCategories.rating')}\n            </MenuItem>\n            <Divider/>\n            <MenuItem className={classes.menuItem}\n                      onClick={() => selectSorting(null, \"false\")}>\n                <ExpandMoreIcon className={clsx(classes.menuIcon, classes.darkMode)}/>\n                {t('projectsPage.controlPanel.sort.sortingCategories.rating')}\n            </MenuItem>\n            <Divider/>\n            <MenuItem className={classes.menuItem}\n                      onClick={() => selectSorting(null, null)}>\n                <ClearIcon className={clsx(classes.menuIcon, classes.darkMode)}/>\n                {t('projectsPage.controlPanel.sort.sortingCategories.reset')}\n            </MenuItem>\n        </Menu>\n    </>\n}\n\nexport default SortingElements","import SortingElements from \"./SortingElements\"\r\nexport default SortingElements","import React, {useEffect} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {useLocation} from \"react-router-dom\";\nimport storeFilterProjects from \"../../store/storeFilterProjects\";\nimport FilterByTechnology from \"./FilterByTechnology\";\nimport SortingElements from \"./SortingElements\";\nimport {ListItem} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        display: \"flex\",\n        [theme.breakpoints.down('sm')]: {\n            justifyContent: \"center\"\n        },\n    },\n    listItem: {\n        width: \"max-content\",\n        padding: 0,\n        marginRight: 20,\n        [theme.breakpoints.down('xs')]: {\n            marginRight: 5,\n            paddingBottom: 0,\n        }\n    }\n}))\n\nconst FilterMenuOfMyProjects = () => {\n    const classes = useStyles()\n    const search = useLocation().search\n    const query = new URLSearchParams(search)\n\n    useEffect(() => {\n        const sortByReleaseDate = query.get(\"sortByReleaseDate\")\n        const sortByRating = query.get(\"sortByRating\")\n        const showProjectsWithTechnologies = query.get(\"showProjectsWithTechnologies\")\n\n        if (sortByReleaseDate) {\n            storeFilterProjects.selectSorting(\"sortByReleaseDate\", sortByReleaseDate)\n        } else if (sortByRating) {\n            storeFilterProjects.selectSorting(\"sortByRating\", sortByRating)\n        } else {\n            storeFilterProjects.selectSorting()\n        }\n\n        if (showProjectsWithTechnologies) {\n            storeFilterProjects.manageShowProjectsWithTechnologies(showProjectsWithTechnologies)\n        } else {\n            storeFilterProjects.resetFilterProjectsWithTechnologies()\n        }\n    }, [])\n\n    return <>\n            <List classes={{root: classes.list}}>\n                <ListItem classes={{root: classes.listItem}}>\n                    <SortingElements/>\n                </ListItem>\n                <ListItem classes={{root: classes.listItem}}>\n                    <FilterByTechnology/>\n                </ListItem>\n            </List>\n    </>\n}\n\nexport default observer(FilterMenuOfMyProjects)","import FilterMenuOfMyProjects from \"./FilterMenuOfMyProjects\";\r\nexport default FilterMenuOfMyProjects;","export const convertStringToDate = (date) => {\n    if (String(date).split(\".\").length < 2) return Infinity\n    date = String(date).split(\".\")\n    const day = Number(date[0])\n    const month = Number(date[1])\n    const year = Number(date[2])\n    date = new Date(year, month, day)\n    return date\n}\n\nexport const filterProjects = (projects, showProjectsWithTechnologies, allProjectsWithTechnologies) => {\n    let result = []\n    if (showProjectsWithTechnologies.length === allProjectsWithTechnologies.length) return projects\n    result = projects.filter(project => {\n        let flag = false\n        showProjectsWithTechnologies.forEach(technology => {\n            if (project.technologiesUsed.find(projectTechnology => projectTechnology.toUpperCase() === technology.toUpperCase())) {\n                flag = true\n            }\n        })\n        return flag\n    })\n    return result\n}\n\nexport const sortProjects = (projects, sorting) => {\n    let result = []\n    const parameters = sorting.find(parameters => parameters.switched)\n    if (!parameters) return projects\n    switch (parameters.name) {\n        case 'sortByReleaseDate':\n            result = projects.sort((previousProject, nextProject) => {\n                if (parameters.ascending) {\n                    if (!previousProject.releaseDate.done) return 1;\n                    return convertStringToDate(previousProject.releaseDate.date) - convertStringToDate(nextProject.releaseDate.date)\n                } else {\n                    if (!nextProject.releaseDate.done) return 1;\n                    return convertStringToDate(nextProject.releaseDate.date) - convertStringToDate(previousProject.releaseDate.date)\n                }\n            })\n            return result\n        case 'sortByRating':\n            result = projects.sort((previousProject, nextProject) => {\n                if (parameters.ascending) {\n                    return previousProject.rating - nextProject.rating\n                } else {\n                    return nextProject.rating - previousProject.rating\n                }\n            })\n            return result\n    }\n    return projects\n}\n","import React from \"react\"\r\nimport {action, makeObservable, observable} from \"mobx\"\r\n\r\n\r\nclass storeModalWindow {\r\n    isOpen\r\n    content\r\n\r\n    constructor() {\r\n        this.isOpen = false\r\n        this.content = null\r\n        makeObservable(this, {\r\n            isOpen: observable,\r\n            content: observable,\r\n            toggle: action,\r\n            setContent: action,\r\n        })\r\n    }\r\n\r\n    toggle = (flag = false) => {\r\n        this.isOpen = flag\r\n    }\r\n\r\n    setContent = (content) => {\r\n        this.content = content\r\n    }\r\n}\r\n\r\nexport default new storeModalWindow();","import React from \"react\";\nimport {\n    Avatar,\n    Box, Button,\n    Card, CardActionArea,\n    CardHeader,\n    CardMedia,\n    Link,\n    Typography\n} from \"@material-ui/core\";\nimport Rating from '@material-ui/lab/Rating';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {green, red} from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport {\n    BsInfoCircle,\n    FiSettings,\n    GiAchievement,\n    GiCheckMark,\n    GiTimeTrap,\n    IoEyeOutline,\n    MdErrorOutline,\n    SiFurrynetwork\n} from \"react-icons/all\";\nimport storeModalWindow from \"../../store/storeModalWindow\";\nimport storeApp from \"../../store/storeApp\";\nimport {observer} from \"mobx-react\";\nimport {useTranslation} from \"react-i18next\";\n\nconst useStyles = makeStyles(theme => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main\n    },\n    cardHeaderContent: {\n        fontSize: 30,\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n    },\n    cardHeaderTittle: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    projectAvatarCompleted: {\n        backgroundColor: green[500],\n    },\n    projectAvatarUnfinished: {\n        backgroundColor: red[500],\n    },\n    preview: {\n        height: 0,\n        paddingTop: '56.25%',\n    },\n    previewModal: {\n        boxShadow: theme.shadows[2],\n    },\n    projectLink: {\n        width: \"max-content\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    projectLinkIcon: {\n        marginRight: 6,\n    },\n    cardModal: {\n        overflowY: \"scroll\",\n        width: 800,\n        maxHeight: \"90vh\",\n        [theme.breakpoints.down('lg')]: {\n            width: \"80vw\",\n        },\n        [theme.breakpoints.down('md')]: {\n            width: \"80vw\",\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: \"85vw\",\n        },\n    },\n    characteristicsHeaderIcon: {\n        fontSize: 20,\n        marginRight: 10,\n    },\n    descriptionTitleIcon: {\n        fontSize: 20,\n        marginRight: 10,\n    },\n    description: {\n        paddingLeft: 10,\n    },\n    characteristicsList: {\n        margin: 0,\n    },\n    characteristicsItem: {\n        padding: 0,\n    },\n    technologiesUsed: {\n        marginBottom: 20,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        [theme.breakpoints.down('md')]: {\n            maxWidth: 225,\n        },\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: 304,\n        },\n        [theme.breakpoints.down('xs')]: {\n            maxWidth: 225,\n        },\n    },\n    contentWrapper: {\n        padding: theme.spacing(2, 2, 1, 2)\n    },\n    contentWrapperModal: {\n        padding: theme.spacing(2)\n    },\n}))\n\nconst ProjectCard = observer((props) => {\n    const {isModal, showModal} = props\n    const classes = useStyles({darkMode: storeApp.darkMode})\n    const {project} = props\n    const {t} = useTranslation()\n\n    return <>\n        <Card className={clsx({[classes.cardModal]: isModal})}>\n            <CardActionArea disabled={isModal}\n                            onClick={!isModal && showModal}>\n                <CardHeader avatar={\n                    <Avatar\n                        aria-label=\"recipe\"\n                        className={clsx({[classes.projectAvatarCompleted]: !!project.releaseDate.done},\n                            {[classes.projectAvatarUnfinished]: !project.releaseDate.done})}>\n                        {!!project.releaseDate.done ? <GiCheckMark /> : <GiTimeTrap />}\n                    </Avatar>\n                }\n                            title={project.title}\n                            subheader={project.releaseDate.date}\n                            classes={{\n                                content: classes.cardHeaderContent,\n                                title: classes.cardHeaderTittle,\n                            }}\n                />\n                <CardMedia\n                    className={clsx(classes.preview)}\n                    image={require(`../../images/projects/${project.screenshots[0]}`).default}\n                    title={project.title}\n                />\n            </CardActionArea>\n            <Box className={clsx({\n                [classes.contentWrapper]: !isModal,\n                [classes.contentWrapperModal]: isModal\n            })}>\n                <Box display={\"flex\"}\n                     justifyContent={\"space-between\"}\n                     width={\"100%\"}\n                     height={\"100%\"}\n                >\n                    <Link className={clsx(classes.projectLink, classes.darkMode)}\n                          href={project.demoLink.link}\n                          target={\"_blank\"}\n                    >\n                        <IoEyeOutline className={classes.projectLinkIcon} />\n                        <Typography>\n                            {project.demoLink.text}\n                        </Typography>\n                    </Link>\n                    <Link className={clsx(classes.projectLink, classes.darkMode)}\n                          href={project.projectLink.link}\n                          target={\"_blank\"}\n                    >\n                        <FiSettings className={classes.projectLinkIcon} />\n                        <Typography>\n                            {project.projectLink.text}\n                        </Typography>\n                    </Link>\n                </Box>\n                <Box borderColor=\"transparent\">\n                    <Rating name=\"read-only\" value={project.rating} readOnly />\n                </Box>\n                <Typography className={clsx({[classes.technologiesUsed]: !isModal})}>\n                    {project.technologiesUsed.join(\", \")}\n                </Typography>\n                {isModal && <>\n                    <Box>\n                        <Box>\n                            <Box display={\"flex\"} alignItems={\"center\"}>\n                                <BsInfoCircle className={classes.descriptionTitleIcon} />\n                                <Typography>\n                                    {project.description.header}\n                                </Typography>\n                            </Box>\n                            <Typography className={classes.description}>\n                                {project.description.description}\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <Box display={\"flex\"} alignItems={\"center\"}>\n                                <GiAchievement className={classes.characteristicsHeaderIcon}/>\n                                <Typography>{project.benefits.header}</Typography>\n                            </Box>\n                            <ul className={classes.characteristicsList}>\n                                {project.benefits.description.map((advantage, index) => {\n                                    return <React.Fragment key={`advantage-${index}`}>\n                                        <li className={classes.characteristicsItem}>\n                                            {advantage}\n                                        </li>\n                                    </React.Fragment>\n                                })}\n                            </ul>\n                            <Box display={\"flex\"} alignItems={\"center\"}>\n                                <MdErrorOutline className={classes.characteristicsHeaderIcon}/>\n                                <Typography>{project.limitations.header}</Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                    <ul className={classes.characteristicsList}>\n                        {project.limitations.description.map((flaw, index) => {\n                            return <React.Fragment key={`flaw-${index}`}>\n                                <li className={classes.characteristicsItem}>\n                                    {flaw}\n                                </li>\n                            </React.Fragment>\n                        })}\n                    </ul>\n                </>}\n                {!isModal ? <Button fullWidth\n                                    color={storeApp.darkMode ? \"default\" : \"primary\"}\n                                    onClick={showModal}\n                                    startIcon={<SiFurrynetwork />}\n                >\n                    {t('projectsPage.cardProject.moreDetails')}\n                </Button> : null}\n            </Box>\n        </Card>\n    </>\n})\n\nconst ProjectCardManager = (props) => {\n    const {project} = props\n\n    const showModal = () => {\n        storeModalWindow.setContent(<ProjectCard project={project} isModal={true} />)\n        storeModalWindow.toggle(true)\n    }\n\n    return <ProjectCard project={project}\n                        showModal={showModal} />\n}\n\nexport default observer(ProjectCardManager)","import ProjectDescriptionCard from \"./ProjectDescriptionCard\";\r\nexport default ProjectDescriptionCard;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport storeModalWindow from \"../../store/storeModalWindow\";\nimport {observer} from \"mobx-react\";\nimport {AiOutlineClose} from \"react-icons/all\";\nimport {Box, Button, Paper} from \"@material-ui/core\";\nimport storeApp from \"../../store/storeApp\";\nimport clsx from \"clsx\";\nimport {grey, teal} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    darkModeBackground: {\n        backgroundColor: props => props.darkMode ? grey[700] : grey[200]\n    },\n    root: {\n        border: 0,\n        borderRadius: 8,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    closeButton: {\n        color: props => props.darkMode ? grey[50] : grey[800],\n        borderRadius: 0,\n        border: \"none\",\n        marginLeft: \"auto\",\n        height: 35,\n        minWidth: 35,\n        fontSize: 20,\n        padding: \"0 12px\",\n        display: \"flex\",\n    },\n    closeButtonContainer: {\n\n    },\n    closeButtonIcon: {},\n    closeButtonWrapper: {}\n}));\n\nconst MyModal = () => {\n    const classes = useStyles({darkMode: storeApp.darkMode});\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={storeModalWindow.isOpen}\n                onClose={() => storeModalWindow.toggle(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={storeModalWindow.isOpen}>\n                    <Paper className={classes.root}>\n                        <div className={clsx(classes.closeButtonContainer, classes.darkModeBackground)}>\n                            <Button variant=\"outlined\"\n                                    className={classes.closeButton}\n                                    onClick={() => storeModalWindow.toggle(false)}\n                            >\n                                <AiOutlineClose className={classes.closeButtonIcon}/>\n                            </Button>\n                        </div>\n                        {storeModalWindow.content}\n                    </Paper>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\n\nexport default observer(MyModal)","import MyModal from \"./MyModal\"\r\nexport default MyModal","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Grid} from \"@material-ui/core\";\nimport storeFilterProjects from \"../../store/storeFilterProjects\";\nimport {observer} from \"mobx-react\";\nimport {filterProjects, sortProjects} from \"../../additionalFunctions/additionalFunctions\"\nimport ProjectDescriptionCard from \"../ProjectDescriptionCard\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport MyModal from \"../MyModal\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        margin: 0,\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1),\n        },\n        [theme.breakpoints.up('lg')]: {\n            padding: theme.spacing(2),\n        }\n    },\n}))\n\nconst ListOfMyProjects = () => {\n    const classes = useStyles();\n    const {t} = useTranslation();\n    let projects = t('projects', {returnObjects: true});\n    projects = filterProjects(projects, storeFilterProjects.showProjectsWithTechnologies, storeFilterProjects.allProjectsWithTechnologies)\n    projects = sortProjects(projects, storeFilterProjects.sorting)\n\n    return <>\n        <MyModal/>\n        <Grid container\n              xs={12}>\n            {projects.map((project, index) => {\n                return <React.Fragment key={`project-${index}`}>\n                    <Grid\n                        item\n                        xs={12}\n                        md={6}\n                        lg={6}\n                        xl={4}\n                        classes={{root: classes.list}}\n                    >\n                        <ProjectDescriptionCard project={project} />\n                    </Grid>\n                </React.Fragment>\n            })}\n        </Grid>\n    </>\n}\n\nexport default observer(ListOfMyProjects);","import ListOfMyProjects from \"./ListOfMyProjects\";\r\nexport default ListOfMyProjects;","import Projects from \"./Projects\";\nexport default Projects;","import React, {useEffect} from \"react\";\nimport FilterMenuOfMyProjects from \"../../components/FilterMenuOfMyProjects\";\nimport ListOfMyProjects from \"../../components/ListOfMyProjects\";\nimport {observer} from \"mobx-react\";\n\n\nconst Projects = () => {\n\n    return <div>\n        <FilterMenuOfMyProjects/>\n        <ListOfMyProjects/>\n    </div>\n}\n\nexport default observer(Projects);","import React from \"react\";\nimport PATH from '../../constants/path';\nimport {Route, Switch} from 'react-router-dom';\nimport Profile from \"../../pages/Profile\";\nimport Projects from \"../../pages/Projects\";\n\nconst AppWithRoutes = () => {\n    return (<>\n        <Switch>\n            <Route path={PATH.PROFILE} component={() => <Profile />}/>\n            <Route path={PATH.PROJECTS} component={() => <Projects />}/>\n            <Route path={PATH.ALL} render={() => <Profile />}/>\n        </Switch>\n    </>);\n}\n\nexport default AppWithRoutes;","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport storeApp from \"../../store/storeApp\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PATH from \"../../constants/path\";\nimport {NavLink} from \"react-router-dom\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport {observer} from \"mobx-react\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport {PersonOutline, Whatshot} from \"@material-ui/icons\";\nimport {useTranslation} from \"react-i18next\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            // maxWidth: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        position: \"relative\",\n    },\n    wrapperNavigationPanelDesktop: {\n      height: \"100%\",\n    },\n    navigationPanelDesktop: {\n        height: \"100%\",\n    },\n    myDrawerPaperDesktop: {\n        position: \"static\",\n        width: 200,\n        [theme.breakpoints.down('lg')]: {\n            width: 180,\n        },\n        [theme.breakpoints.down('md')]: {\n            width: 164,\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: \"none\",\n        },\n\n    },\n    myDrawerPaperMobile: {\n        width: 180,\n    }\n}));\n\nconst DrawerContent = () => {\n    const {t} = useTranslation();\n\n    return <div>\n        <Divider/>\n        <List>\n            <ListItem onClick={() => storeApp.toggleNavbar(false)} to={PATH.PROFILE} component={NavLink} button>\n                <ListItemIcon><PersonOutline/></ListItemIcon>\n                <ListItemText primary={t('navigation.profile')}/>\n            </ListItem>\n            <ListItem onClick={() => storeApp.toggleNavbar(false)} to={PATH.PROJECTS} component={NavLink} button>\n                <ListItemIcon><Whatshot/></ListItemIcon>\n                <ListItemText primary={t('navigation.projects')}/>\n            </ListItem>\n        </List>\n    </div>\n}\n\nconst Navigation = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (<>\n        <nav className={classes.drawer}\n             aria-label=\"mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                    open={storeApp.navBar}\n                    onClose={() => storeApp.toggleNavbar(false)}\n                    classes={{\n                        paper: `${classes.drawerPaper} ${classes.myDrawerPaperMobile}`,\n                    }}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                >\n                    <DrawerContent storeApp={storeApp} />\n                </Drawer>\n            </Hidden>\n            <Hidden className={classes.wrapperNavigationPanelDesktop} xsDown implementation=\"css\" >\n                <Drawer\n                    className={classes.navigationPanelDesktop}\n                    classes={{\n                        paper: `${classes.drawerPaper} ${classes.myDrawerPaperDesktop}`,\n                    }}\n                    variant=\"permanent\"\n                    open\n                >\n                    <DrawerContent storeApp={storeApp} />\n                </Drawer>\n            </Hidden>\n        </nav>\n    </>)\n};\n\nexport default observer(Navigation);","import Navigation from \"./Navigation\";\nexport default Navigation;","import {observer} from \"mobx-react\";\nimport {Switch} from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport clsx from \"clsx\";\nimport storeApp from \"../../store/storeApp\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main\n    },\n    icon: {\n        width: 20,\n        height: 20,\n    },\n    switch: {\n        marginRight: 0,\n    },\n    mySwitchBase: {\n        '&.Mui-checked': {\n            color: theme.palette.common.white,\n            transform: \"none\",\n        }\n    },\n    switchTrack: {\n        display: \"none\",\n    },\n}))\n\nconst ToggleDarkMode = () => {\n    const classes = useStyles({darkMode: storeApp.darkMode})\n\n    return <Switch icon={<Brightness4Icon className={classes.icon} />}\n                   checkedIcon={<Brightness7Icon className={classes.icon} />}\n                   checked={storeApp.darkMode}\n                   onChange={() => storeApp.toggleDarkMode()}\n                   name=\"Theme\"\n                   classes={{\n                       root: classes.switch,\n                       switchBase: clsx(classes.mySwitchBase, classes.darkMode),\n                       track: classes.switchTrack,\n                   }}\n    />\n}\n\nexport default observer(ToggleDarkMode)","import ToggleDarkMode from \"./ToggleDarkMode\"\r\nexport default ToggleDarkMode","import {observer} from \"mobx-react\";\nimport React, {useState} from \"react\";\nimport storeApp from \"../../store/storeApp\";\nimport {Button, Menu, MenuItem} from \"@material-ui/core\";\nimport Translate from \"@material-ui/icons/Translate\";\nimport clsx from \"clsx\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport languages from \"../../translations/languages/languages\";\nimport i18next from \"../../translations/i18next\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main\n    },\n    showModal: {\n        marginRight: 40,\n        [theme.breakpoints.down(\"sm\")]: {\n            marginRight: 10,\n        }\n    },\n    showModalText: {\n        textTransform: \"none\",\n        marginRight: 10,\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"0.8rem\",\n        },\n    },\n    showModalStartIcon: {\n        marginRight: 8,\n        fontSize: 20,\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"1rem\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            marginRight: 2,\n        }\n    },\n    showModalEndIcon: {\n        fontSize: 20,\n        marginLeft: \"auto\",\n    },\n    menuItem: {\n        minWidth: 180,\n        paddingLeft: 30,\n    },\n}))\n\nconst ChangeLanguage = () => {\n    const classes = useStyles({darkMode: storeApp.darkMode})\n    const [showMenuLanguage, setShowMenuLanguage] = useState(null)\n    const changeLanguage = (language) => {\n        storeApp.changeLanguage(language);\n        setShowMenuLanguage(null);\n    }\n\n    return <>\n        <Button startIcon={<Translate />}\n                endIcon={<KeyboardArrowDownIcon />}\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={event => setShowMenuLanguage(event.currentTarget)}\n                classes={{\n                    root: classes.showModal,\n                    text: classes.showModalText,\n                    startIcon: clsx(classes.showModalStartIcon, classes.darkMode),\n                    endIcon: clsx(classes.showModalEndIcon, classes.darkMode),\n                }}\n        >\n            {languages[i18next.language].name}\n        </Button>\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={showMenuLanguage}\n            keepMounted\n            open={showMenuLanguage}\n            onClose={() => setShowMenuLanguage(null)}\n        >\n            <MenuItem onClick={() => changeLanguage(languages[\"be-BE\"])}\n                      classes={{\n                          root: classes.menuItem\n                      }}\n            >\n                {languages[\"be-BE\"].name}\n            </MenuItem>\n            <MenuItem onClick={() => changeLanguage(languages[\"en-EN\"])}\n                      classes={{\n                          root: classes.menuItem\n                      }}\n            >\n                {languages[\"en-EN\"].name}\n            </MenuItem>\n            <MenuItem onClick={() => changeLanguage(languages[\"ru-RU\"])}\n                      classes={{\n                          root: classes.menuItem\n                      }}\n            >\n                {languages[\"ru-RU\"].name}\n            </MenuItem>\n        </Menu>\n    </>\n}\n\nexport default observer(ChangeLanguage)","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport WorkOutline from '@material-ui/icons/WorkOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport storeApp from \"../../store/storeApp\";\nimport {Box} from \"@material-ui/core\";\nimport {useTranslation} from 'react-i18next';\nimport {observer} from \"mobx-react\";\nimport clsx from \"clsx\";\nimport ToggleDarkMode from \"../ToggleDarkMode\";\nimport ChangeLanguage from \"../ChangeLanguage/ChangeLanguage\";\n\nconst useStyles = makeStyles((theme) => ({\n    darkMode: {\n        color: props => props.darkMode ? theme.palette.common.white : theme.palette.primary.main\n    },\n    appBar: {\n        backgroundColor: theme.palette.background.paper,\n        height: \"max-content\",\n    },\n    toggleNavigation: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n        [theme.breakpoints.down('xs')]: {\n            marginRight: theme.spacing(1),\n        },\n    },\n    header: {\n        height: \"min-content\",\n        margin: \"auto 0\",\n        color: theme.palette.text.primary,\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"1rem\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            fontSize: \"0.8rem\",\n        },\n    },\n    navigationPanel: {\n        flexGrow: 1,\n    },\n    controlPanel: {\n        margin: \"0 10px 0 auto\",\n        [theme.breakpoints.down(\"xs\")]: {\n            marginRight: 0,\n        }\n    },\n    logo: {\n        margin: \"auto 10px auto 0\",\n        fontSize: 40,\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n}));\n\nconst Header = () => {\n    const classes = useStyles({darkMode: storeApp.darkMode});\n    const {t} = useTranslation();\n\n    return <>\n        <Box display={\"flex\"}>\n            <CssBaseline/>\n            <AppBar className={classes.appBar}\n                    position={\"relative\"}\n            >\n                <Toolbar>\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={() => storeApp.toggleNavbar(true)}\n                        className={clsx(classes.toggleNavigation, classes.darkMode)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Box display=\"flex\"\n                         alignItems=\"flex-center\"\n                         width={\"100%\"}>\n                        <WorkOutline className={clsx(classes.logo, classes.darkMode)}/>\n                        <Typography className={classes.header}\n                                    component={\"h1\"}\n                                    variant={\"h6\"}>\n                            {t('header')}\n                        </Typography>\n                        <Box className={classes.controlPanel}>\n                            <ChangeLanguage />\n                            <ToggleDarkMode />\n                        </Box>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    </>\n}\n\nexport default observer(Header)","import Header from \"./Header\";\r\nexport default Header;","import React from \"react\";\nimport {Paper, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        padding: \"32px 0\",\n        position: \"relative\",\n    },\n    currentDate: {\n        position: \"absolute\",\n        bottom: \"calc(50% - 12px)\",\n        left: `calc(50% - 42px)`,\n        width: \"max-content\",\n        fontSize: 16,\n        fontWeight: \"bold\",\n    }\n}))\n\nconst Footer = () => {\n    const classes = useStyles();\n    const {t} = useTranslation();\n\n    return <Paper className={classes.wrapper} elevation={3}>\n        <Typography className={classes.currentDate}>\n            {t('date', {date: new Date})}\n        </Typography>\n    </Paper>\n}\n\nexport default Footer","import Footer from \"./Footer\";\nexport default Footer;","import {createTheme} from \"@material-ui/core/styles\";\n\nexport const themeDefault = createTheme({\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 400,\n            md: 600,\n            lg: 760,\n            xl: 1280,\n        },\n    }\n});\n\n// themeDefault.overrides = {\n//     MuiInputBase: {\n//         root: {\n//\n//         }\n//     }\n// }\n\n// themeDefault.props = {\n//     MuiButton: {\n//     }\n// }\n\nexport const themeDarkMode = createTheme({\n    palette: {\n        type: \"dark\",\n    }\n})\n","import React from \"react\"\nimport AppWithRoutes from \"./appWithRoutes\"\nimport {Box, Container, makeStyles} from \"@material-ui/core\"\nimport Navigation from \"../Navigation\"\nimport Header from \"../Header\"\nimport Footer from \"../Footer\"\nimport {withTranslation} from 'react-i18next'\nimport {themeDarkMode, themeDefault} from \"../../Theme/Theme\"\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles'\nimport storeApp from \"../../store/storeApp\"\nimport {observer} from \"mobx-react\"\n\nconst useStyles = makeStyles(theme => ({\n    wrapper: {\n        height: \"100%\",\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: 0,\n    },\n    pagesWrapper: {\n        backgroundColor: props => props.palette.background.default,\n        flexGrow: 1,\n        padding: theme.spacing(4),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3),\n        },\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(2),\n        },\n    },\n}))\n\nconst App = () => {\n    const theme =  createTheme(\n        storeApp.darkMode ? {...themeDefault, palette: themeDarkMode.palette}:\n            {...themeDefault}\n    )\n    const classes = useStyles(theme)\n\n    return (<>\n        <ThemeProvider theme={theme}>\n            <Container\n                className={classes.wrapper}\n                maxWidth={\"xl\"}\n            >\n                <Header />\n                <Box display={\"flex\"}\n                     flexGrow={1}>\n                    <Navigation />\n                    <main className={classes.pagesWrapper}>\n                        <AppWithRoutes />\n                    </main>\n                </Box>\n                <Footer/>\n            </Container>\n        </ThemeProvider>\n    </>);\n};\n\nexport default withTranslation()(observer(App));","import App from \"./App\";\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {HashRouter} from \"react-router-dom\";\nimport theme from \"./Theme/Theme\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <App/>\n    </HashRouter>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}